// <auto-generated />
using Microservicio_Persona.AccessData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Microservicio_Persona.Migrations
{
    [DbContext(typeof(DbContexto))]
    [Migration("20201003184640_Migr2_Micro-Persona")]
    partial class Migr2_MicroPersona
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microservicio_Persona.Domain.Entities.Especialidad", b =>
                {
                    b.Property<int>("EspecialidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EspecialidadId");

                    b.ToTable("Especialidad");

                    b.HasData(
                        new
                        {
                            EspecialidadId = 1,
                            Descripcion = "Programacion"
                        },
                        new
                        {
                            EspecialidadId = 2,
                            Descripcion = "Documentacion"
                        },
                        new
                        {
                            EspecialidadId = 3,
                            Descripcion = "Matematica"
                        },
                        new
                        {
                            EspecialidadId = 4,
                            Descripcion = "Base de datos"
                        });
                });

            modelBuilder.Entity("Microservicio_Persona.Domain.Entities.Estudiante", b =>
                {
                    b.Property<int>("EstudianteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Legajo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstudianteID");

                    b.ToTable("Estudiante");

                    b.HasData(
                        new
                        {
                            EstudianteID = 1,
                            Apellido = "oliver",
                            Email = "pepeolivera@hotmail.com>",
                            Legajo = 1233,
                            Nombre = "pepe"
                        },
                        new
                        {
                            EstudianteID = 2,
                            Apellido = "gonzalez",
                            Email = "pepag@hotmail.com>",
                            Legajo = 1234,
                            Nombre = "pepa"
                        },
                        new
                        {
                            EstudianteID = 3,
                            Apellido = "perez",
                            Email = "juanperez@hotmail.com>",
                            Legajo = 1235,
                            Nombre = "juan"
                        },
                        new
                        {
                            EstudianteID = 4,
                            Apellido = "lopez",
                            Email = "ariellopez@hotmail.com>",
                            Legajo = 1236,
                            Nombre = "ariel"
                        });
                });

            modelBuilder.Entity("Microservicio_Persona.Domain.Entities.Profesor", b =>
                {
                    b.Property<int>("ProfesorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EspecialidadId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfesorId");

                    b.HasIndex("EspecialidadId");

                    b.ToTable("Profesor");

                    b.HasData(
                        new
                        {
                            ProfesorId = 1,
                            Apellido = "olivera",
                            Email = "lolivera.unaj@gmail.com>",
                            EspecialidadId = 1,
                            Nombre = "lucas"
                        },
                        new
                        {
                            ProfesorId = 2,
                            Apellido = "conde",
                            Email = "sergiounaj@gmail.com>",
                            EspecialidadId = 2,
                            Nombre = "sergio"
                        },
                        new
                        {
                            ProfesorId = 3,
                            Apellido = "jorge",
                            Email = "octaviojorge37@gmail.com>",
                            EspecialidadId = 1,
                            Nombre = "octavio"
                        },
                        new
                        {
                            ProfesorId = 4,
                            Apellido = "Amet",
                            Email = "leonardoAmet@gmail.com>",
                            EspecialidadId = 1,
                            Nombre = "leonardo"
                        });
                });

            modelBuilder.Entity("Microservicio_Persona.Domain.Entities.Profesor", b =>
                {
                    b.HasOne("Microservicio_Persona.Domain.Entities.Especialidad", "EspecialidadNavegator")
                        .WithMany("Profesor")
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
